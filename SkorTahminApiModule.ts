//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v14.0.0.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

/* tslint:disable */
/* eslint-disable */
// ReSharper disable InconsistentNaming

export class Client {
    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
        this.http = http ? http : window as any;
        this.baseUrl = baseUrl ?? "";
    }

    /**
     * @param body (optional) 
     * @return Success
     */
    macListesiGetir(body: MacListesiRequest | undefined): Promise<MacListesiResponseDataResult> {
        console.log('in 6');
        let url_ = this.baseUrl + "/SkorTahmin/MacListesiGetir";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);
        console.log('in 7');
        let options_: RequestInit = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "text/plain"
            }
        };
        console.log('in 8');
        console.log(url_);
        return this.http.fetch(url_, options_).then((_response: Response) => {
            console.log('in -9');
            return this.processMacListesiGetir(_response);
        });
    }

    protected processMacListesiGetir(response: Response): Promise<MacListesiResponseDataResult> {
        console.log('in 10');
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = MacListesiResponseDataResult.fromJS(resultData200);
            return result200;
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<MacListesiResponseDataResult>(null as any);
    }
}

export class MacListesiDto implements IMacListesiDto {
    mac_guid?: string;
    mac_ad?: string | undefined;
    mac_kodu?: string | undefined;
    ev_sahibi_takim_id?: number;
    ev_sahibi_takim_ad?: string | undefined;
    konuk_takim_id?: number;
    konuk_takim_ad?: string | undefined;
    mac_saati?: Date;
    minimum_bahis_sayisi?: number;
    lig_id?: number;
    oran_mac_sonucu_1?: number | undefined;
    oran_mac_sonucu_x?: number | undefined;
    oran_mac_sonucu_2?: number | undefined;
    oran_ilk_yari_sonucu_1?: number | undefined;
    oran_ilk_yari_sonucu_x?: number | undefined;
    oran_ilk_yari_sonucu_2?: number | undefined;

    constructor(data?: IMacListesiDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.mac_guid = _data["mac_guid"];
            this.mac_ad = _data["mac_ad"];
            this.mac_kodu = _data["mac_kodu"];
            this.ev_sahibi_takim_id = _data["ev_sahibi_takim_id"];
            this.ev_sahibi_takim_ad = _data["ev_sahibi_takim_ad"];
            this.konuk_takim_id = _data["konuk_takim_id"];
            this.konuk_takim_ad = _data["konuk_takim_ad"];
            this.mac_saati = _data["mac_saati"] ? new Date(_data["mac_saati"].toString()) : <any>undefined;
            this.minimum_bahis_sayisi = _data["minimum_bahis_sayisi"];
            this.lig_id = _data["lig_id"];
            this.oran_mac_sonucu_1 = _data["oran_mac_sonucu_1"];
            this.oran_mac_sonucu_x = _data["oran_mac_sonucu_x"];
            this.oran_mac_sonucu_2 = _data["oran_mac_sonucu_2"];
            this.oran_ilk_yari_sonucu_1 = _data["oran_ilk_yari_sonucu_1"];
            this.oran_ilk_yari_sonucu_x = _data["oran_ilk_yari_sonucu_x"];
            this.oran_ilk_yari_sonucu_2 = _data["oran_ilk_yari_sonucu_2"];
        }
    }

    static fromJS(data: any): MacListesiDto {
        data = typeof data === 'object' ? data : {};
        let result = new MacListesiDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["mac_guid"] = this.mac_guid;
        data["mac_ad"] = this.mac_ad;
        data["mac_kodu"] = this.mac_kodu;
        data["ev_sahibi_takim_id"] = this.ev_sahibi_takim_id;
        data["ev_sahibi_takim_ad"] = this.ev_sahibi_takim_ad;
        data["konuk_takim_id"] = this.konuk_takim_id;
        data["konuk_takim_ad"] = this.konuk_takim_ad;
        data["mac_saati"] = this.mac_saati ? this.mac_saati.toISOString() : <any>undefined;
        data["minimum_bahis_sayisi"] = this.minimum_bahis_sayisi;
        data["lig_id"] = this.lig_id;
        data["oran_mac_sonucu_1"] = this.oran_mac_sonucu_1;
        data["oran_mac_sonucu_x"] = this.oran_mac_sonucu_x;
        data["oran_mac_sonucu_2"] = this.oran_mac_sonucu_2;
        data["oran_ilk_yari_sonucu_1"] = this.oran_ilk_yari_sonucu_1;
        data["oran_ilk_yari_sonucu_x"] = this.oran_ilk_yari_sonucu_x;
        data["oran_ilk_yari_sonucu_2"] = this.oran_ilk_yari_sonucu_2;
        return data;
    }
}

export interface IMacListesiDto {
    mac_guid?: string;
    mac_ad?: string | undefined;
    mac_kodu?: string | undefined;
    ev_sahibi_takim_id?: number;
    ev_sahibi_takim_ad?: string | undefined;
    konuk_takim_id?: number;
    konuk_takim_ad?: string | undefined;
    mac_saati?: Date;
    minimum_bahis_sayisi?: number;
    lig_id?: number;
    oran_mac_sonucu_1?: number | undefined;
    oran_mac_sonucu_x?: number | undefined;
    oran_mac_sonucu_2?: number | undefined;
    oran_ilk_yari_sonucu_1?: number | undefined;
    oran_ilk_yari_sonucu_x?: number | undefined;
    oran_ilk_yari_sonucu_2?: number | undefined;
}

export class MacListesiRequest implements IMacListesiRequest {
    sorting?: string | undefined;
    skip?: number;
    take?: number;

    constructor(data?: IMacListesiRequest) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.sorting = _data["sorting"];
            this.skip = _data["skip"];
            this.take = _data["take"];
        }
    }

    static fromJS(data: any): MacListesiRequest {
        data = typeof data === 'object' ? data : {};
        let result = new MacListesiRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["sorting"] = this.sorting;
        data["skip"] = this.skip;
        data["take"] = this.take;
        return data;
    }
}

export interface IMacListesiRequest {
    sorting?: string | undefined;
    skip?: number;
    take?: number;
}

export class MacListesiResponse implements IMacListesiResponse {
    toplamMacSayisi?: number;
    maclar?: MacListesiDto[] | undefined;

    constructor(data?: IMacListesiResponse) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.toplamMacSayisi = _data["toplamMacSayisi"];
            if (Array.isArray(_data["maclar"])) {
                this.maclar = [] as any;
                for (let item of _data["maclar"])
                    this.maclar!.push(MacListesiDto.fromJS(item));
            }
        }
    }

    static fromJS(data: any): MacListesiResponse {
        data = typeof data === 'object' ? data : {};
        let result = new MacListesiResponse();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["toplamMacSayisi"] = this.toplamMacSayisi;
        if (Array.isArray(this.maclar)) {
            data["maclar"] = [];
            for (let item of this.maclar)
                data["maclar"].push(item.toJSON());
        }
        return data;
    }
}

export interface IMacListesiResponse {
    toplamMacSayisi?: number;
    maclar?: MacListesiDto[] | undefined;
}

export class MacListesiResponseDataResult implements IMacListesiResponseDataResult {
    status?: boolean;
    messages?: string[] | undefined;
    data?: MacListesiResponse;

    constructor(data?: IMacListesiResponseDataResult) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.status = _data["status"];
            if (Array.isArray(_data["messages"])) {
                this.messages = [] as any;
                for (let item of _data["messages"])
                    this.messages!.push(item);
            }
            this.data = _data["data"] ? MacListesiResponse.fromJS(_data["data"]) : <any>undefined;
        }
    }

    static fromJS(data: any): MacListesiResponseDataResult {
        data = typeof data === 'object' ? data : {};
        let result = new MacListesiResponseDataResult();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["status"] = this.status;
        if (Array.isArray(this.messages)) {
            data["messages"] = [];
            for (let item of this.messages)
                data["messages"].push(item);
        }
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        return data;
    }
}

export interface IMacListesiResponseDataResult {
    status?: boolean;
    messages?: string[] | undefined;
    data?: MacListesiResponse;
}

export class ApiException extends Error {
    override message: string;
    status: number;
    response: string;
    headers: { [key: string]: any; };
    result: any;

    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {
        super();

        this.message = message;
        this.status = status;
        this.response = response;
        this.headers = headers;
        this.result = result;
    }

    protected isApiException = true;

    static isApiException(obj: any): obj is ApiException {
        return obj.isApiException === true;
    }
}

function throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): any {
    if (result !== null && result !== undefined)
        throw result;
    else
        throw new ApiException(message, status, response, headers, null);
}